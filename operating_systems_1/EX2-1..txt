#Εργαστήριο ΛΣ 1/ Άσκηση 2 / 2020-21

#
#----------------------------------------
#
#Ερώτηση 1: Να γραφτεί script με το όνομα searching το οποίο:
#(α) να δέχεται ως ορίσματα δύο ακεραίους αριθμούς και 
#(β) να ζητάει από το χρήστη το όνομα ενός καταλόγου, και με βάση αυτά να εμφανίζει στην οθόνη τα ακόλουθα (τα 1-3 με χρήση της εντολής find και τα 4-5 με συνδυασμό των εντολών ls και grep): 
#
#1.1 Τα αρχεία του δέντρου του δοθέντος καταλόγου με εξουσιοδοτήσεις (permissions) τον πρώτο αριθμό (όρισμα) θεωρώντας τον ως οκταδικό ισοδύναμο.
#2.Τα αρχεία του δέντρου του δοθέντος καταλόγου που άλλαξαν (modify) περιεχόμενα κατά τις ‘x’ τελευταίες μέρες, όπου ‘x’ ο δεύτερος αριθμός (όρισμα).
#3.Τους υποκαταλόγους του δέντρου του δοθέντος καταλόγου που προσπελάστηκαν (access) κατά τις ‘x’ τελευταίες μέρες, όπου ‘x’ ο δεύτερος αριθμός (όρισμα).
#4.Τα αρχεία του δοθέντος καταλόγου στα οποία έχουν δικαίωμα ανάγνωσης όλοι οι χρήστες.
#5.Τους  υποκαταλόγους  του  δοθέντος  καταλόγου  στους  οποίους  έχουν  δικαίωμα  αλλαγών (create/rename/deletefiles) εκτός από τον ιδιοκτήτη και άλλοι χρήστες του συστήματος.
#Πριν από τον εκτύπωση κάθε λίστας από τις παραπάνω (1 έως 5) να τυπώνεται κατάλληλη επικεφαλίδα η οποία να αναφέρει 
#μεταξύ άλλων και τον αριθμό των αρχείων (ή υποκαταλόγων) που πρόκειται να τυπωθούν. Το scriptνα εκτελείται επαναληπτικά όσο επιθυμεί ο χρήστης (για διαφορετικούς καταλόγους) και 
#στο τέλος (πριν την τελική έξοδο) να εμφανίζει αθροιστικά το συνολικό αριθμό των ευρεθέντων (αρχείων / υποκαταλόγων) 
#κάθε περίπτωσης (από τις 1 έως 6) για όλους τους καταλόγους στους οποίους έψαξε.
#
#Απάντηση 1: 
#
#!/bin/bash

echo Excersise 1

stp=0

while (($stp == 0));  do

echo "Please enter two integers"
read first second

echo "Please enter the full path to a directory"
read dir


echo "The number of files are"
find $dir -perm $first|wc -l    #Prints the number of files 
echo "The files are"
find $dir -perm $first          #Prints the files 

echo "The number of files are"
find $dir -mtime +$second |wc -l
echo "The files are"
find $dir -mtime +$second

echo "The number of files are"
find $dir -type d -atime +$second |wc -l
echo "The files are"
find $dir -type d -atime +$second  

cd $dir
echo "The number of files are"
ls -la | egrep "^[-]+.+[-]+r" |wc -l 
echo "The files are"
ls -la | egrep "^[-]+.+[-]+r" 

echo "The number of files are"
ls -dl */ | egrep "^.rw.+rw.+rw" |wc -l 
echo "The files are"
ls -dl */ | egrep "^.rw.+rw.+rw"

echo "Do you want to terminate this script? Yes=1/No=0"
read answer

if  (($answer == 1)); then
        stp=1
fi

done
#
#
#Σχόλια: Με τις 3 πρώτες εντολές δημιουργώ το αρχείο, του αλλάζω τα permissions ώστε να μπορώ να το εκτελέσω και έπειτα με τον editor vim γράφω μέσα σε αυτό. 
#Με την εντολή echo εμφανίζω στο standard output, την οθόνη, τα μηνύματα "Excersise 1", "Please enter two integers", "Please enter the full path to a directory",
#"The number of files are" και "Do you want to terminate this script? Yes=1/No=0". 
#Με την εντολή read διαβάζω από το standard input, το πληκτρολόγιο, τους δύο ακεραίους οι οποίοι τοποθετούνται στις μεταβλητές first και second. Επίσης, διαβάζω 
#και το full path ενός καταλόγου και το τοποθετώ στην μεταβλητή dir. 
#
#Για το 1ο υποερώτημα: Το υλοποίησα με την εντολή find $dir -perm $first βρίσκει στον κατάλογο dir ένα αρχείο με τα permissios (-perm) που θέλουμε εμείς. 
#
#Για το 2ο υποερώτημα: Το υλοποίησα με την εντολή find $dir -mtime +$second όπου σύμφωνα με το manual page της εντολής find το option -mtime βρίσκει τα αρχεία που άλλαξαν 
#τις x τελευταίες μέρες όπου x είναι η δεύτερη μεταβλητή που διαβάσαμε. 
#
#Για το 3ο υποερώτημα: Το υλοποίησα με την εντολή find $dir -type d -atime +$second όπου σύμφωνα με το manual page της εντολής find το option -type d φιλτράρει και εκτυπώνει όλους τους 
#καταλόγους του δοθέντος δέντρου και το option -atime τους καταλόγους που προσπελάστηκαν τις x τελευταίες μέρες όπου x είναι η δεύτερη μεταβλητή που διαβάσαμε.
#
#Η εντολή cd $dir μεταφέρει τον χρήστη στο $dir το οποίο είναι βοηθά στο να υλοποιηθούν τα παρακάτω υποερωτήματα.  
#
#Για το 4ο υποερώτημα: Το υλοποίησα με την εντολή ls -la | egrep "^[-]+.+[-]+r" όπου η εντολή ls -la μου εμφανίζει όλα τα αρχεία ακόμα και αυτά που αρχίζουν από . σε μορφή
#λίστας. Έπειτα με την εντολή egrep "^[-]+.+[-]+r" ψάχνω τα αρχεία στα οποία έχουν δικαίωμα ανάγνωσης όλοι οι χρήστες. Πιο συγκεκριμένα:
#Στα permissions όλων των αρχείων θα υπάρχει το permission read και για τον ιδιοκτήτη και για την ομάδα αλλά και για τους users. Επομένως, όλα τα αυτά τα αρχεία θα έχουν
τουλάχιστον την μορφή -r--r--r--. Άρα έχω: 
#Το atom ^ σημαίνει αρχή γραμμής.
#Το [-] σημαίνει ο χαρακτήρας "-".
#Το + σημαίνει να ψάξει το προηγούμενο atom 1 ή περισσότερες φορές. 
#Το atom . σημαίνει ένας οποιοδήποτε χαρακτήρας.
#Και όλα αυτά τα επαναλαμβάνω. Έτσι με τον παραπάνω συνδιασμό ψάχνω να βρώ όλα τα αρχεία τα όποία και στα 3 πεδία έχουν τον χαρακτήρα "r". 
#
#Για το υποερώτημα 5: Ομοίως με το υποερώτημα 4 η εντολή ls -dl */  φιλτράρει και εκτυπώνει όλους του υποκαταλόγους τους καταλόγου μας. Τα αρχεία θα έχουν τουλάχιστον
#την μορφή drw-rw-rw-- επομένως με τον συνδυασμό "^.rw.+rw.+rw" υλοποιώ το ζητούμενο. 
#
#Όλα τα παραπάνω ερωτήματα είναι μέσα σε μια while η οποία σταματά όταν η μεταβλητή stp γίνει 1. Η συνθήκη τερματισμού ελέχνεται στην αρχή του script. Η if ελέχγει αν η μεταβλητή
#answer έχει την τιμή 1 και αν ναι τότε αλλάζω την τιμή της stp σε 1 και το script τερματίζεται. Διαφορετικά το script συνεχίζεται κανονικά.
#
#Η άσκηση μου ζητά να εκτυπώσω στο standard output πόσα αρχεία θα εκτυπώσουν οι παραπάνω εντολές. Για αυτό τον λόγο υπάρχουν οι εντολές διπλά με την μόνη διαφορά ότι οι 
#πρώτες περιλαμβάνουν και την εντολή  wc -l μετά την διασωλήνωση όπου μετράει πόσες γραμμές εκτυπώνονται στο standard output. 
