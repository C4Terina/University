/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_H_RPCGEN
#define _RPC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct input {
	float a;
	struct {
		u_int Y_len;
		int *Y_val;
	} Y;
};
typedef struct input input;

struct avg {
	float avgrs;
};
typedef struct avg avg;

struct min_max {
	struct {
		u_int mm_len;
		int *mm_val;
	} mm;
};
typedef struct min_max min_max;

struct mult {
	struct {
		u_int mulrs_len;
		float *mulrs_val;
	} mulrs;
};
typedef struct mult mult;

#define RES_PROG 0x23451112
#define RES_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define RPC_AVG 1
extern  avg * rpc_avg_1(input *, CLIENT *);
extern  avg * rpc_avg_1_svc(input *, struct svc_req *);
#define RPC_MM 2
extern  min_max * rpc_mm_1(input *, CLIENT *);
extern  min_max * rpc_mm_1_svc(input *, struct svc_req *);
#define RPC_MULT 3
extern  mult * rpc_mult_1(input *, CLIENT *);
extern  mult * rpc_mult_1_svc(input *, struct svc_req *);
extern int res_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define RPC_AVG 1
extern  avg * rpc_avg_1();
extern  avg * rpc_avg_1_svc();
#define RPC_MM 2
extern  min_max * rpc_mm_1();
extern  min_max * rpc_mm_1_svc();
#define RPC_MULT 3
extern  mult * rpc_mult_1();
extern  mult * rpc_mult_1_svc();
extern int res_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_input (XDR *, input*);
extern  bool_t xdr_avg (XDR *, avg*);
extern  bool_t xdr_min_max (XDR *, min_max*);
extern  bool_t xdr_mult (XDR *, mult*);

#else /* K&R C */
extern bool_t xdr_input ();
extern bool_t xdr_avg ();
extern bool_t xdr_min_max ();
extern bool_t xdr_mult ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_H_RPCGEN */
