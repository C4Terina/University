*/Εργαστήριο ΛΣ 2/ Άσκηση 1 / 2020-21


----------------------------------------

Ερώτηση 1: Έστω ένα πρόγραμμα σε C στην αρχή του οποίου δίνονται οι εξής εντολές:
pid1=fork();
if (pid1!=0){ //instructions for parent process
	pid2=fork(); 
	pid3=fork(); }
else{ //instructions child process
	pid4=fork();
	if (pid4==0){ //instructions for child process 
	pid5=fork();}
	}
Πόσες διεργασίες  παράχθηκαν  με τις  προηγούμενες  εντολές; Ποια  είναι η  «συγγένεια» μεταξύ  τους;
Εξηγείστε συνοπτικά πως παρήχθησαν οι ανωτέρω διεργασίες (εντολή προς εντολή, με ποιο fork δημιουργήθηκε η κάθε μία κλπ).
Δώστε επίσης ένα σχήμα στο οποίο θα φαίνεταιμε σαφή τρόποη ιεραρχία μεταξύ των ανωτέρω διεργασιών.

Απάντηση 1: Δημιουργούνται 6 διεργασίες αλλά συνολικά είναι 7 διεργασίες που εκτελούνται. Η 7η είναι ο "γονέας όλων" και την ονομάζω P0. 
Αρχικά η εντολή pid1=fork() δημιουργεί ένα child process (P0.1) όπου γονέας της είναι η P0. Αν η προηγούμενη fork επιστρέψει μη-μηδενικό αριθμό τότε 
αυτά που εκτελούνται είναι εντολές για τον γονέα. Επομένως η εντολή  pid2=fork() δημιουργεί την P0.2 με γονέα την P0. Έπειτα η εντολή pid3=fork() δημιουργεί
ένα child process για την P0.2.1 με γονέα την P0.2 και με αυτή την δημιουργία τελειώνει η εκτέλεση της P0.2. Η εντολή pid3=fork() δημιουργεί επίσης
ένα τρίτο child process την P0.3 με γονέα την P0. Μετά απο την εντολή else εκτελούνται εντολές για το child process δηλαδή την P0.1. Η εντολή pid4=fork()
δημιουργεί την διεργασία P0.1.1 με γονέα την P.0.1. Η δεύτερη if έχει εντολές για την child process P.0.1.1. Με την εντολή pid5=fork() δημιουργείται 
ένα child process P0.1.1.1 με γονέα την P0.1.1. Το τελικό δέντρο είναι το παρακάτω:

									P0
								/	|	\
						   P0.1    P0.2  P0.3
						     |       |     
						 P0.1.1   P0.2.1
						   |
						 P0.1.1.1
*/
